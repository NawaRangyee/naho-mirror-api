name: Deploy to server (Live)

on:
  release:
    types: [ published ]

jobs:
  build_and_deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup go with cache
        uses: magnetikonline/action-golang-cache@v3
        with:
          go-version-file: go.mod
      - run: go version
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: GO Build package
        run: GOOS=linux GOARCH=amd64 go build -v ${{ secrets.OUTPUT_FILE_NAME }}
      - name: TEST
        run: pwd && ls -al

      - name: Upload binary file by SCP (KR)
        uses: horochx/deploy-via-scp@master
        with:
          local: /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/${{ secrets.OUTPUT_FILE_NAME }}
          remote: ${{ secrets.REMOTE_DEPLOY_PATH }}/${{ secrets.OUTPUT_FILE_NAME }}_new
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
      - name: Start the service with new file
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh $SSH_USER@$SSH_HOST -o StrictHostKeyChecking=no <<'ENDSSH'
              export TERM=xterm-256color
              source /etc/profile
              source ~/.bashrc
              sudo systemctl stop ${{ secrets.SERVICE_NAME }}
              mv ${{ secrets.REMOTE_DEPLOY_PATH }}/${{ secrets.OUTPUT_FILE_NAME }}_new ${{ secrets.REMOTE_DEPLOY_PATH }}/${{ secrets.OUTPUT_FILE_NAME }}
              sudo systemctl start ${{ secrets.SERVICE_NAME }}
          ENDSSH
